import { Types } from "mongoose";
export declare class PerformerDto {
    _id: Types.ObjectId;
    name: string;
    firstName: string;
    lastName: string;
    username: string;
    email: string;
    phone: string;
    phoneCode: string;
    status: string;
    avatarId: Types.ObjectId;
    avatarPath: string;
    coverId: Types.ObjectId;
    coverPath: string;
    idVerificationId: Types.ObjectId;
    idVerification?: any;
    documentVerificationId: Types.ObjectId;
    documentVerification?: any;
    verifiedEmail: boolean;
    verifiedAccount: boolean;
    verifiedDocument: boolean;
    isFeatured: boolean;
    twitterConnected: boolean;
    googleConnected: boolean;
    avatar?: string;
    cover?: string;
    gender: string;
    country: string;
    city: string;
    state: string;
    zipcode: string;
    address: string;
    languages: string[];
    categoryIds: Types.ObjectId[];
    height: string;
    weight: string;
    bio: string;
    eyes: string;
    hair: string;
    butt: string;
    ethnicity: string;
    sexualOrientation: string;
    isFreeSubscription: boolean;
    durationFreeSubscriptionDays: number;
    monthlyPrice: number;
    yearlyPrice: number;
    publicChatPrice: number;
    stats: {
        likes: number;
        subscribers: number;
        views: number;
        totalVideos: number;
        totalPhotos: number;
        totalGalleries: number;
        totalProducts: number;
        totalFeeds: number;
        followers: number;
        totalStreamTime: number;
    };
    pay2m: {
        recipientId: number;
    };
    score: number;
    bankingInformation?: any;
    ccbillSetting?: any;
    paypalSetting?: any;
    blockCountries?: any;
    createdAt: Date;
    updatedAt: Date;
    isOnline: boolean;
    welcomeVideoId: Types.ObjectId;
    welcomeVideoPath: string;
    welcomeVideoName: string;
    activateWelcomeVideo: boolean;
    isBookMarked: boolean;
    isSubscribed: boolean;
    lastStreamingTime: Date;
    live: number;
    streamingStatus: string;
    dateOfBirth: Date;
    bodyType: string;
    balance: number;
    isFollowed: boolean;
    commissionPercentage: number;
    constructor(data: Partial<any>);
    toResponse(includePrivateInfo?: boolean, isAdmin?: boolean): any;
    getName(): string;
    toSearchResponse(): any;
    toPublicDetailsResponse(): any;
}
