import * as mongoose from 'mongoose';
export declare const PerformerSchema: mongoose.Schema<any, mongoose.Model<any, any, any, any, any, any>, {}, {}, {}, {}, mongoose.DefaultSchemaOptions, {
    updatedAt: Date;
    createdAt: Date;
    verifiedEmail: boolean;
    balance: number;
    isOnline: number;
    googleConnected: boolean;
    twitterConnected: boolean;
    activateWelcomeVideo: boolean;
    verifiedAccount: boolean;
    verifiedDocument: boolean;
    languages: string[];
    categoryIds: mongoose.Types.ObjectId[];
    isFreeSubscription: boolean;
    durationFreeSubscriptionDays: number;
    monthlyPrice: number;
    yearlyPrice: number;
    publicChatPrice: number;
    score: number;
    live: number;
    streamingStatus: "public" | "private" | "group" | "offline";
    commissionPercentage: number;
    isFeatured: boolean;
    name?: string;
    email?: string;
    firstName?: string;
    lastName?: string;
    avatarId?: mongoose.Types.ObjectId;
    avatarPath?: string;
    username?: string;
    phone?: string;
    status?: string;
    gender?: string;
    country?: string;
    onlineAt?: Date;
    offlineAt?: Date;
    stats?: {
        views: number;
        likes: number;
        subscribers: number;
        followers: number;
        totalVideos: number;
        totalPhotos: number;
        totalGalleries: number;
        totalProducts: number;
        totalFeeds: number;
        totalStreamTime: number;
    };
    phoneCode?: string;
    coverPath?: string;
    city?: string;
    state?: string;
    zipcode?: string;
    address?: string;
    bio?: string;
    lastStreamingTime?: Date;
    dateOfBirth?: Date;
    bodyType?: string;
    coverId?: mongoose.Types.ObjectId;
    idVerificationId?: mongoose.Types.ObjectId;
    documentVerificationId?: mongoose.Types.ObjectId;
    welcomeVideoId?: mongoose.Types.ObjectId;
    welcomeVideoPath?: string;
    height?: string;
    weight?: string;
    eyes?: string;
    hair?: string;
    butt?: string;
    ethnicity?: string;
    sexualOrientation?: string;
}, mongoose.Document<unknown, {}, mongoose.FlatRecord<{
    updatedAt: Date;
    createdAt: Date;
    verifiedEmail: boolean;
    balance: number;
    isOnline: number;
    googleConnected: boolean;
    twitterConnected: boolean;
    activateWelcomeVideo: boolean;
    verifiedAccount: boolean;
    verifiedDocument: boolean;
    languages: string[];
    categoryIds: mongoose.Types.ObjectId[];
    isFreeSubscription: boolean;
    durationFreeSubscriptionDays: number;
    monthlyPrice: number;
    yearlyPrice: number;
    publicChatPrice: number;
    score: number;
    live: number;
    streamingStatus: "public" | "private" | "group" | "offline";
    commissionPercentage: number;
    isFeatured: boolean;
    name?: string;
    email?: string;
    firstName?: string;
    lastName?: string;
    avatarId?: mongoose.Types.ObjectId;
    avatarPath?: string;
    username?: string;
    phone?: string;
    status?: string;
    gender?: string;
    country?: string;
    onlineAt?: Date;
    offlineAt?: Date;
    stats?: {
        views: number;
        likes: number;
        subscribers: number;
        followers: number;
        totalVideos: number;
        totalPhotos: number;
        totalGalleries: number;
        totalProducts: number;
        totalFeeds: number;
        totalStreamTime: number;
    };
    phoneCode?: string;
    coverPath?: string;
    city?: string;
    state?: string;
    zipcode?: string;
    address?: string;
    bio?: string;
    lastStreamingTime?: Date;
    dateOfBirth?: Date;
    bodyType?: string;
    coverId?: mongoose.Types.ObjectId;
    idVerificationId?: mongoose.Types.ObjectId;
    documentVerificationId?: mongoose.Types.ObjectId;
    welcomeVideoId?: mongoose.Types.ObjectId;
    welcomeVideoPath?: string;
    height?: string;
    weight?: string;
    eyes?: string;
    hair?: string;
    butt?: string;
    ethnicity?: string;
    sexualOrientation?: string;
}>> & Omit<mongoose.FlatRecord<{
    updatedAt: Date;
    createdAt: Date;
    verifiedEmail: boolean;
    balance: number;
    isOnline: number;
    googleConnected: boolean;
    twitterConnected: boolean;
    activateWelcomeVideo: boolean;
    verifiedAccount: boolean;
    verifiedDocument: boolean;
    languages: string[];
    categoryIds: mongoose.Types.ObjectId[];
    isFreeSubscription: boolean;
    durationFreeSubscriptionDays: number;
    monthlyPrice: number;
    yearlyPrice: number;
    publicChatPrice: number;
    score: number;
    live: number;
    streamingStatus: "public" | "private" | "group" | "offline";
    commissionPercentage: number;
    isFeatured: boolean;
    name?: string;
    email?: string;
    firstName?: string;
    lastName?: string;
    avatarId?: mongoose.Types.ObjectId;
    avatarPath?: string;
    username?: string;
    phone?: string;
    status?: string;
    gender?: string;
    country?: string;
    onlineAt?: Date;
    offlineAt?: Date;
    stats?: {
        views: number;
        likes: number;
        subscribers: number;
        followers: number;
        totalVideos: number;
        totalPhotos: number;
        totalGalleries: number;
        totalProducts: number;
        totalFeeds: number;
        totalStreamTime: number;
    };
    phoneCode?: string;
    coverPath?: string;
    city?: string;
    state?: string;
    zipcode?: string;
    address?: string;
    bio?: string;
    lastStreamingTime?: Date;
    dateOfBirth?: Date;
    bodyType?: string;
    coverId?: mongoose.Types.ObjectId;
    idVerificationId?: mongoose.Types.ObjectId;
    documentVerificationId?: mongoose.Types.ObjectId;
    welcomeVideoId?: mongoose.Types.ObjectId;
    welcomeVideoPath?: string;
    height?: string;
    weight?: string;
    eyes?: string;
    hair?: string;
    butt?: string;
    ethnicity?: string;
    sexualOrientation?: string;
}> & {
    _id: mongoose.Types.ObjectId;
}, never>>;
